import discord
from discord.ext import commands
import requests

class Palworld(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def palinfo(self, ctx, name): 
        response = requests.get(
            f'https://palworld-paldex-api.herokuapp.com/api/pals?name={name}'
        )

        # check if the response status code is 200 (OK)

        if response.status_code == 200:
            # get the data from the response as a JSON object
            data = response.json()
            # check if the data has any content
            if data['content']:
                # get the first item from the content list (assuming there is only one match for the name)
                pal = data['content'][0]
                # create an embed with the name and types as the title and the description as the description
                embed = discord.Embed(
                    title=f'{pal["name"]} ({", ".join(pal["types"])})',
                    description=pal['description'],
                    color=0x00ff00
                )

                # add the aura as a field
                embed.add_field(
                    name='Aura',
                    value=f'{pal["aura"]["name"]} - {pal["aura"]["description"]}',
                    inline=False
                )

                # add the suitability as a field
                embed.add_field(
                    name='Suitability',
                    value=', '.join([f'{s["type"]} ({s["level"]})' for s in pal['suitability']]),
                    inline=False
                )

                # add the drops as a field
                embed.add_field(
                    name='Drops',
                    value=', '.join(pal['drops']),
                    inline=False
                )

                # add the skills as a field

                embed.add_field(
                    name='Skills',
                    value='\n'.join([f'- {skill["name"]} ({skill["type"]}) - {skill["description"]}' for skill in pal['skills']]),
                    inline=False
                )

                embed.set_thumbnail(url=pal['image'])
                # set the footer to the source of the data
                embed.set_footer(text='Data from Palworld Paldex')
                await ctx.send(embed=embed)
            else:
                # if the data has no content, send a message that the name was not found
                await ctx.send(f'No Pal with the name {name} was found.')
        else:
            # if the response status code is not 200, send a message that the api request failed
            await ctx.send(f'Failed to get data from the api. Status code: {response.status_code}')

def setup(bot):
    bot.add_cog(Palworld(bot))